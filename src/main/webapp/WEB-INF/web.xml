<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
	http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">
	
	<display-name>animeworld</display-name>
	
	<welcome-file-list>  
        <welcome-file>/WEB-INF/jsp/login.jsp</welcome-file>  
    </welcome-file-list>  
	<!-- 配置DispatcherServlet -->
	 <!-- 添加对springmvc的支持 -->
	<servlet>
		<servlet-name>animeworld</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- 配置springMVC需要加载的配置文件
			spring-dao.xml,spring-service.xml,spring-web.xml
			Mybatis - > spring -> springmvc
		 -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:spring/spring-web.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>  
        <async-supported>true</async-supported>
	</servlet>
	<servlet-mapping>  
        <servlet-name>animeworld</servlet-name>  
        <!-- 对所有请求进行拦截 -->  
        <url-pattern>/</url-pattern>  
    </servlet-mapping> 
	
	 <!--加载spring容器-->
	 <!-- Spring监听器 -->
	<context-param>
	    <param-name>contextConfigLocation</param-name>
	    <param-value>classpath:spring/applicationContext-*.xml</param-value>
	</context-param>
	 <listener>
    	<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
 	 </listener>

	 <!-- post乱码处理 -->
	<filter>
		<filter-name>encoding</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>encoding</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	 <!-- shiro配置 开始 -->
    <filter>
        <filter-name>shiroFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
        <async-supported>true</async-supported>
        <init-param>
            <param-name>targetFilterLifecycle</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>shiroFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!-- shiro配置 结束 -->
</web-app>

